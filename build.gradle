//이 프로젝트의 플러그인 의존성 관리를 위한 설정
buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//필수 플러그인 추가
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.csb.book'
version '1.2.1-SNAPSHOT' + new Date().format("yyyyMMddHHmmss")
sourceCompatibility = '11'

//Lombok 때문에 생긴 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

//의존성 설정
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'  //spring-security-oauth2-client 와 spring-security-oauth2-jose를 기본으로 관리
    implementation 'org.springframework.session:spring-session-jdbc' //세션 저장소 설정 위한 의존성
    implementation 'org.springframework.security:spring-security-test' //테스트코드에서 스프링 시큐리티 사용 위한 의존성 (@WithMockUser 등)
    implementation 'org.mariadb.jdbc:mariadb-java-client'  //rds에서 사용할 mariaDB 드라이버 설정

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    //JUnit4 추가
    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }

// test시에도 query dsl 모델을 사용하기 위해서는 해당 옵션을 추가 해줘야 한다.
    testCompileOnly("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
}

test {
    useJUnitPlatform()
}