#yml또는 properties파일의 이름을 application-xxx으로 만들면 profile이 생성된다.
# 메인 설정파일에서 spring.profiles.include: xxx 으로 application-xxx.yml의 설정들을 가져올 수 있다.

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 683811736779-f5jt77lb564m47j4pithsje6eeqaelo8.apps.googleusercontent.com
            client-secret: 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
            scope: profile, email #scope 기본값이 openid,profile,email인데,
                                  #기본값을 그대로 두면, openid가 아닌 서비스(네이버,카카오 등)은 따로 OAuth2Service를 만들어줘야 하므로
                                  #하나의 OAuth2Service 를 사용하기 위해 scope에서 openid를 제거하여 지정.
          naver:
            client-id: uQJGUVYQvGpbGN4s7pFx
            client-secret: 8tOsLFuwqr
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}' # /{변수} 구조를 제대로 인식하지 못하므로, 따옴표로 감싼다.
            authorization-grant-type: authorization_code
            scope: name,email,profile_image
            client-name: Naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response  # 기준이 되는 user_name의 이름을 네이버에서는 response로 해야 한다. 네이버 회원 조회 시 반환되는 JSON값 형식 때문.
